{"version":3,"sources":["helpers/localStorageHelper.js","helpers/sampleContent.js","helpers/editorHelper.js","store.js","components/styleButton.js","richTextComponents/blockComponents.js","richTextComponents/inlineComponents.js","helpers/colorHelper.js","helpers/hoverHelper.js","richTextComponents/annotatorComponents.js","components/commentComponent.js","mainEditor.js","helpers/windowHelper.js","components/fileManager3.js","App.js","index.js"],"names":["STORAGE_DOC_NAME","createOrReplaceDocument","savedDocs","name","docContent","newObj","existingLayoutIdx","findIndex","x","push","friedRiceRecipeContent","EditorHelper","getInitialContent","state","docs","length","console","log","content","convertFromRaw","fileName","convertToRawContent","convertToRaw","setContent","findDoc","find","d","editorContent","createDemoContent","initialState","ret","editorDirty","isDocNameNew","docCurreFileName","savedLayoutsStr","localStorage","getItem","JSON","parse","localListDocs","GetInitialState","store","createContext","Provider","StateProvider","children","useReducer","action","type","newStateSave","data","newFileName","newDocs","docName","Storage","error","savedDocuments","setItem","stringify","localSaveContent","newStateEditor","selectedDocName","newStateDocChanged","deletedDoc","newStateDelete","docsAfterDelete","indexFind","splice","locaDeleteContent","Error","dispatch","value","StyleButton","onToggle","e","preventDefault","props","style","className","this","active","isDisabled","onMouseDown","title","icon","faIcon","showIconAndLabel","label","React","Component","BLOCK_TYPES","customStyles","option","provided","color","isSelected","container","base","fontSize","width","fontFamily","control","minHeight","valueContainer","paddingTop","paddingBottom","height","singleValue","marginTop","marginBottom","indicatorsContainer","indicatorSeparator","clearIndicator","dropdownIndicator","input","margin","menu","zIndex","getBlockStyle","block","getType","formatOptionLabel","metadata","display","alignItems","marginRight","BlockStyleControls","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","findOption","optVal","optionsList","opt","map","optionVal","isCollapsed","options","styles","onChange","newValue","actionMeta","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","colorToRgbString","colorString","opacity","hexVal","lowerCase","toLowerCase","colorHexMap","rgb","hexToRgb","r","g","b","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hex","replace","m","result","exec","parseInt","addHightlight","divElem","linkElem","line1Elem","line2Elem","border","stroke","removeHightlight","handleHoverLink","linkRef","linkKey","line1Ref","line2Ref","isMouseOver","document","getElementById","current","handleHoverComment","divRef","key","link","backgroundColor","borderRadius","cursor","transform","lineHeight","ANNOTATOR_TYPES","requiresSelection","popup","findLinkEntities","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","Link","useRef","id","ref","onMouseOver","getData","onMouseOut","position","left","pointerEvents","x1","y1","x2","y2","strokeWidth","AnnotatorControls","onClick","CompositeDecorator","strategy","component","insertEmoji","logState","contentStateWithEntity","createEntity","comment","isNew","parentMouseOver","parentMouseOverLink","parentMouseOut","parentMouseOutLink","getLastCreatedEntityKey","nextEditorState","EditorState","set","currentContent","RichUtils","toggleLink","parentRerender","confirmLink","emoji","createEmpty","nextContentState","Modifier","insertText","replaceText","onEmojiSelect","emojiObject","native","useState","isPopoverOpen","setIsPopoverOpen","Popover","isOpen","positions","onClickOutside","containerStyle","onSelect","Comment","isNewHandled","setHandledNew","isEditMode","setEditMode","colorVal","setColorVal","commentVal","setCommentVal","refCommentTxtArea","refWrapper","styleColorIcon","styleCommentBody","useEffect","handleClickOutside","event","substring","contains","target","focus","addEventListener","removeEventListener","onColorChanged","evt","newData","parentUpdateComment","handleDeleteComment","parentDeleteComment","blockKey","onFocus","placeholder","defaultValue","Icon","faTimesCircle","getCommentHeaderElement","spellCheck","autoFocus","MainEditor","useContext","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","useWindowSize","decoratorLink","getInitialState","createWithContent","setEditorState","commentRerender","setCommentReRender","updateComment","replaceEntityData","deleteComment","currEntityKey","start","end","updatedSelection","SelectionState","merge","focusOffset","anchorOffset","updatedState","commentsAndEntities","currContent","blocks","getBlockMap","getAllEntities","forEach","entityObj","entity","div","getCommentsAndEntities","entities","editorRect","getBoundingClientRect","sumDivHeights","reduce","prev","currEnt","prevBottom","top","sumDivsPrev","i","entObj","spanElem","divRect","spanRect","adjustmentFromPrevBot","remainingDivHeight","spaceRequired","bottom","adjustDivPositions","editorElem","editorChildElem","firstChild","editorChildRect","spanParentElem","parentElement","svgElem","spanParentRect","svgRect","editorRight","right","svgOffset","offsetEditorAndSpan","setAttribute","divHeightHalf","drawConnectorLines","editState","editor","hasText","first","inlineStyle","toggleInlineStyle","toggleBlockType","blockStyleFn","customStyleMap","CODE","padding","handleKeyCommand","command","newState","onTab","ent","FileManager3","deletedItem","setDeletedItem","showMenu","setShowMenu","selRef","doc","index","optionsVal","setOptions","selVal","setSelVal","classBtnSave","isClearable","group","groupEnd","blur","onInputChange","inputValue","isCreateMenuItem","faFileAlt","context","marginLeft","handleDelete","closeMenuOnSelect","menuIsOpen","onBlur","blurInputOnSelect","faSave","App","isActiveHamburger","setHamburger","hamClassNames","hamBarClassNames","settingsAreaClassNames","faCommentDots","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1d688f0f.chunk.js","sourcesContent":["const STORAGE_DOC_NAME = \"documents\"\r\n\r\nexport const localSaveContent = (content, docName) => {\r\n    if (typeof(Storage) === \"undefined\") {\r\n        console.error(\"localSaveLayout: browser does not supoort Local Storage\");\r\n        return [];\r\n    }\r\n\r\n    let savedDocuments = [];\r\n    let savedLayoutsStr = localStorage.getItem(STORAGE_DOC_NAME);\r\n    if (savedLayoutsStr !== null) {\r\n        savedDocuments = JSON.parse(savedLayoutsStr)\r\n    }\r\n\r\n    // Find any existing layout with same name. Remove it and replace with our new one.\r\n    createOrReplaceDocument(savedDocuments, docName, content);\r\n\r\n    localStorage.setItem(STORAGE_DOC_NAME, JSON.stringify(savedDocuments));\r\n    console.log(\"localSaveLayout\");\r\n\r\n    return savedDocuments;\r\n}\r\n\r\nconst createOrReplaceDocument = (savedDocs, name, docContent) => {\r\n    let newObj = {\r\n        name,\r\n        docContent\r\n    }\r\n\r\n    let existingLayoutIdx = savedDocs.findIndex(x => x!== null && x.name === name);\r\n    if (existingLayoutIdx !== -1) {\r\n        savedDocs[existingLayoutIdx] = newObj;\r\n    }\r\n    else {\r\n        savedDocs.push(newObj);\r\n    }\r\n}\r\n\r\nexport const locaDeleteContent = (docName) => {\r\n    let savedDocuments = [];\r\n    let savedLayoutsStr = localStorage.getItem(STORAGE_DOC_NAME);\r\n    if (savedLayoutsStr !== null) {\r\n        savedDocuments = JSON.parse(savedLayoutsStr)\r\n    }\r\n\r\n    let indexFind = savedDocuments.findIndex(d => d.name === docName);\r\n    if (indexFind >= 0) {\r\n        savedDocuments.splice(indexFind, 1);\r\n    }\r\n\r\n    localStorage.setItem(STORAGE_DOC_NAME, JSON.stringify(savedDocuments));\r\n    return savedDocuments;\r\n}\r\n\r\nexport const localListDocs = () => {\r\n    let savedLayoutsStr = localStorage.getItem(STORAGE_DOC_NAME);\r\n    if (savedLayoutsStr === null) {\r\n        return [];\r\n    }\r\n\r\n    return JSON.parse(savedLayoutsStr)\r\n}","export const friedRiceRecipeContent = {\r\n\t\"blocks\": [{\r\n\t\t\t\"key\": \"8b1se\",\r\n\t\t\t\"text\": \"Fried Rice Restaurant Style\",\r\n\t\t\t\"type\": \"header-one\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 27,\r\n\t\t\t\t\t\"key\": 0\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"63pjm\",\r\n\t\t\t\"text\": \"A quick fried rice like you get at your favorite Chinese restaurant. A couple of eggs, baby carrots, peas and soy sauce is all you need.👍\",\r\n\t\t\t\"type\": \"blockquote\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [{\r\n\t\t\t\t\t\"offset\": 123,\r\n\t\t\t\t\t\"length\": 14,\r\n\t\t\t\t\t\"key\": 1\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"fkd93\",\r\n\t\t\t\"text\": \"Ingredients\",\r\n\t\t\t\"type\": \"header-two\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 11,\r\n\t\t\t\t\t\"key\": 2\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"59v0r\",\r\n\t\t\t\"text\": \"2 cups enriched white rice\",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"16l17\",\r\n\t\t\t\"text\": \"4 cups water \",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"8opa4\",\r\n\t\t\t\"text\": \"⅔ cup chopped baby carrots 🥕\",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"4dm01\",\r\n\t\t\t\"text\": \"½ cup frozen green peas \",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 23,\r\n\t\t\t\t\t\"key\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"1qvbb\",\r\n\t\t\t\"text\": \"2 tablespoons vegetable oil \",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"57kfu\",\r\n\t\t\t\"text\": \"2 eggs \",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"1ta0\",\r\n\t\t\t\"text\": \"soy sauce to taste \",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"3pedd\",\r\n\t\t\t\"text\": \"2 tablespoons sesame oil, to taste\",\r\n\t\t\t\"type\": \"unordered-list-item\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"9s7t7\",\r\n\t\t\t\"text\": \"Directions\",\r\n\t\t\t\"type\": \"header-two\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"4ps02\",\r\n\t\t\t\"text\": \"Step 1 \",\r\n\t\t\t\"type\": \"header-four\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 7,\r\n\t\t\t\t\t\"style\": \"BOLD\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"entityRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 6,\r\n\t\t\t\t\t\"key\": 4\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"a8fm7\",\r\n\t\t\t\"text\": \"In a saucepan, combine rice and water. Bring to a boil. Reduce heat, cover, and simmer for 20 minutes.\",\r\n\t\t\t\"type\": \"unstyled\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"7bi9d\",\r\n\t\t\t\"text\": \"Step 2\",\r\n\t\t\t\"type\": \"header-four\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 6,\r\n\t\t\t\t\t\"style\": \"BOLD\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"1l419\",\r\n\t\t\t\"text\": \"In a small saucepan, boil carrots in water about 3 to 5 minutes. Drop peas into boiling water, and drain.\",\r\n\t\t\t\"type\": \"unstyled\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"1aedr\",\r\n\t\t\t\"text\": \"Step 3\",\r\n\t\t\t\"type\": \"header-four\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [{\r\n\t\t\t\t\t\"offset\": 0,\r\n\t\t\t\t\t\"length\": 6,\r\n\t\t\t\t\t\"style\": \"BOLD\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}, {\r\n\t\t\t\"key\": \"ru3r\",\r\n\t\t\t\"text\": \"Heat wok over high heat. Pour in oil, then stir in carrots and peas; cook about 30 seconds. Crack in eggs, stirring quickly to scramble eggs with vegetables. Stir in cooked rice. Shake in soy sauce, and toss rice to coat. Drizzle with sesame oil, and toss again.\",\r\n\t\t\t\"type\": \"unstyled\",\r\n\t\t\t\"depth\": 0,\r\n\t\t\t\"inlineStyleRanges\": [{\r\n\t\t\t\t\t\"offset\": 5,\r\n\t\t\t\t\t\"length\": 4,\r\n\t\t\t\t\t\"style\": \"BOLD\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"entityRanges\": [],\r\n\t\t\t\"data\": {}\r\n\t\t}\r\n\t],\r\n\t\"entityMap\": {\r\n\t\t\"0\": {\r\n\t\t\t\"type\": \"COMMENT\",\r\n\t\t\t\"mutability\": \"MUTABLE\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"comment\": \"THIS IS A SAMPLE CONTENT.\\nYou can save documents to the browser's local storage by typing in a name in the dropdown above and click the Create <doc name> option.\",\r\n\t\t\t\t\"color\": \"green\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"1\": {\r\n\t\t\t\"type\": \"COMMENT\",\r\n\t\t\t\"mutability\": \"MUTABLE\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"comment\": \"You can modify the color of this comment by clicking on this comment and setting a CSS color in the field above, e.g. \\\"darkblue\\\", \\\"#11F\\\" or \\\"#123456\\\"\",\r\n\t\t\t\t\"color\": \"darkblue\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"2\": {\r\n\t\t\t\"type\": \"COMMENT\",\r\n\t\t\t\"mutability\": \"MUTABLE\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"comment\": \"To add a comment, highlight some text, then click the Comment button.\",\r\n\t\t\t\t\"color\": \"red\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"3\": {\r\n\t\t\t\"type\": \"COMMENT\",\r\n\t\t\t\"mutability\": \"MUTABLE\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"comment\": \"I don't like green peas, so I will skip this.\\nI will add spring onions instead.\\nMaybe throw in some garlic too.\",\r\n\t\t\t\t\"color\": \"blue\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"4\": {\r\n\t\t\t\"type\": \"COMMENT\",\r\n\t\t\t\"mutability\": \"MUTABLE\",\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"comment\": \"Use rice cooker instead\",\r\n\t\t\t\t\"color\": \"magenta\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import {Editor, EditorState, RichUtils, convertToRaw, convertFromRaw, getDefaultKeyBinding} from 'draft-js';\r\nimport {friedRiceRecipeContent} from '../helpers/sampleContent';\r\n\r\nexport class EditorHelper\r\n{\r\n    static getInitialContent = (state) => {\r\n        if (state.docs && state.docs.length > 0) {\r\n          console.log('EditorHelper.getInitialContent()...', state.docs[state.docs.length-1].name);          \r\n          return {\r\n            content: convertFromRaw(state.docs[state.docs.length-1].docContent),\r\n            fileName: state.docs[state.docs.length-1].name\r\n          }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static convertToRawContent = convertToRaw;\r\n\r\n    static setContent = (state, name) => {\r\n        if (!state.docs || state.docs.length <= 0) {\r\n          return;\r\n        }\r\n        \r\n        let findDoc = state.docs.find(d => d.name === name);\r\n        if (!findDoc) {\r\n            return;\r\n        }\r\n\r\n        state.editorContent = convertFromRaw(findDoc.docContent);\r\n\r\n    }\r\n\r\n    static createDemoContent = () => {\r\n      return convertFromRaw(friedRiceRecipeContent);\r\n    }\r\n\r\n}\r\n","import React, {createContext, useReducer} from 'react';\r\nimport {localSaveContent, locaDeleteContent} from './helpers/localStorageHelper.js';\r\nimport {localListDocs} from './helpers/localStorageHelper.js'\r\n//\r\nimport {EditorHelper} from './helpers/editorHelper';\r\n\r\n/**\r\n * Gets the initial state for the store\r\n * @returns \r\n */\r\nconst GetInitialState = () => {\r\n    let ret = {\r\n        /**\r\n         * List of documents from the Local Storage (raw content)\r\n         */\r\n        docs: [],\r\n        /**\r\n         * Currently active document; \r\n         * Only used for initialization...TODO may not be needed\r\n         */\r\n        //activeDoc: null,\r\n        /**\r\n         * Current Editor Content (not raw)\r\n         */\r\n        editorContent: null,\r\n        /**\r\n         * Is the current editor dirty\r\n         */\r\n        editorDirty: false,\r\n        /**\r\n         * To set the Save button text as either \"Save\" or \"Save New\" when user inputs something \r\n         * TODO: can be deleted already as we have a new UI\r\n         */\r\n        isDocNameNew: false,\r\n        /**\r\n         * Current active document name\r\n         */\r\n        docCurreFileName: null,        \r\n    }\r\n\r\n    // Get the list of documents from localStorage\r\n    ret.docs = localListDocs();\r\n    if (ret.docs.length > 0) {\r\n        //ret.activeDoc = ret.docs[ret.docs.length -1]; // set the last one as the active document\r\n        let {content, fileName} = EditorHelper.getInitialContent(ret);\r\n        ret.editorContent = content;\r\n        ret.docCurreFileName = fileName;\r\n    }\r\n    else {\r\n        // create a sample document\r\n        ret.editorContent = EditorHelper.createDemoContent();\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nconst initialState = GetInitialState();\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\n/**\r\n * Use this to encapsulate React child elements that need to access context api data and reducer\r\n * @param {children} React child elements\r\n * @returns \r\n */\r\nconst StateProvider = ( { children } ) => {\r\n    const [state, dispatch] = useReducer((state, action) => {\r\n      switch(action.type) {\r\n        case 'save':\r\n            console.log(\"[reducer] save\");\r\n            const newStateSave = {...state};\r\n            let fileName = action.data.newFileName ? action.data.newFileName : state.docCurreFileName;\r\n            let rawContent = EditorHelper.convertToRawContent(state.editorContent);\r\n            let newDocs = localSaveContent(rawContent, fileName);\r\n            newStateSave.docs = newDocs;\r\n            newStateSave.docCurreFileName = fileName;\r\n\r\n            return newStateSave;\r\n        case 'editorStateChanged':\r\n            console.log(\"[reducer] editorStateChanged\");\r\n            const newStateEditor = {...state}\r\n            newStateEditor.editorContent = action.data;\r\n            return newStateEditor;\r\n        //case 'docInputChanged': // todo: remove this\r\n            // [1] Rename Save/Save New button\r\n            // let {isDocNameNew, fileName} = action.data;\r\n            // console.log(\"[reducer] docInputChanged\", isDocNameNew, fileName);\r\n            // if (isDocNameNew === state.isDocNameNew && fileName === state.docCurreFileName) {\r\n            //     return state; // optimize\r\n            // }\r\n            // const newStateDocName = {...state}\r\n            // newStateDocName.isDocNameNew = isDocNameNew;\r\n            // newStateDocName.docCurreFileName = fileName;        \r\n\r\n            // // [2] Load the existing document that matches (TODO: should not come here if there are unsaved changes)\r\n            // EditorHelper.setContent(newStateDocName, fileName);\r\n\r\n            // return newStateDocName;\r\n        case 'selectedDocChanged':\r\n            let selectedDocName = action.data;\r\n            console.log(\"[reducer] selectedDocChanged\", selectedDocName);\r\n            const newStateDocChanged = {...state};\r\n            newStateDocChanged.docCurreFileName = selectedDocName;\r\n            EditorHelper.setContent(newStateDocChanged, selectedDocName);\r\n\r\n            return newStateDocChanged\r\n        case 'delete':\r\n            let deletedDoc = action.data;\r\n            const newStateDelete = {...state};\r\n            console.log(\"[reducer] Doc to be deleted\", deletedDoc);\r\n            let docsAfterDelete = locaDeleteContent(deletedDoc);\r\n            newStateDelete.docs = docsAfterDelete;\r\n            if (newStateDelete.docCurreFileName === deletedDoc) {\r\n                newStateDelete.docCurreFileName = null;\r\n                newStateDelete.editorContent = null;\r\n            }\r\n            return newStateDelete;\r\n        default:\r\n          throw new Error();\r\n          console.log('Reducer detected Save');\r\n      };\r\n    }, initialState);\r\n  \r\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n  };\r\n  \r\n  export { store, StateProvider }","import React from 'react';\r\nimport './styleButton.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as faIcon from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.onToggle = (e) => {\r\n        e.preventDefault();\r\n        this.props.onToggle(this.props.style);\r\n      };\r\n    }\r\n\r\n    // renderIcon() {\r\n    //   return <FontAwesomeIcon icon={faCommentDots}/>\r\n    // }\r\n\r\n    render() {\r\n      let className = 'RichEditor-styleButton';\r\n      if (this.props.active) {\r\n        className += ' RichEditor-activeButton';\r\n      }\r\n      if(this.props.isDisabled) {\r\n        className += ' RichEditor-disabledButton';\r\n      }\r\n\r\n      return (\r\n        <span className={className} \r\n          onMouseDown={this.onToggle}\r\n          title={this.props.title}\r\n        >\r\n          {this.props.icon && <FontAwesomeIcon icon={faIcon[this.props.icon]}/>}\r\n          {(this.props.showIconAndLabel || !this.props.icon) && `   ${this.props.label}`}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default StyleButton","import '../mainEditor.css';\r\nimport StyleButton from '../components/styleButton';\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as faIcon from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst BLOCK_TYPES = [\r\n{label: 'Normal', style: 'normal'},\r\n{label: 'Blockquote', style: 'blockquote', icon: 'faQuoteLeft'},\r\n{label: 'Bulleted', style: 'unordered-list-item', icon: 'faListUl'},\r\n{label: 'Numbered', style: 'ordered-list-item', icon: 'faListOl'},\r\n{label: 'Code Block', style: 'code-block', icon: 'faCode'},\r\n{label: 'Header 1', style: 'header-one'},\r\n{label: 'Header 2', style: 'header-two'},\r\n{label: 'Header 3', style: 'header-three'},\r\n{label: 'Header 4', style: 'header-four'},\r\n{label: 'Header 5', style: 'header-five'},\r\n{label: 'Header 6', style: 'header-six'},\r\n];\r\n\r\nconst customStyles = {  \r\n  option: (provided, state) => ({\r\n  ...provided,\r\n  color: state.isSelected ? 'darkgray' : 'gray',\r\n  }),\r\n  container: base => ({ \r\n      ...base, \r\n      fontSize: '14px',\r\n      width: '160px',\r\n      fontFamily: 'Arvo-Bold'\r\n  }),\r\n  control: base => ({ \r\n      ...base, \r\n      minHeight: '30px'\r\n  }),\r\n  valueContainer: base => ({ \r\n      ...base, \r\n      paddingTop: '0px',\r\n      paddingBottom: '0px',\r\n      height: '100%'\r\n  }),\r\n  singleValue: base => ({ \r\n      ...base, \r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n  }),\r\n  indicatorsContainer: base => ({ \r\n      ...base, \r\n  }),\r\n  indicatorSeparator: base => ({ \r\n      ...base, \r\n      height: '100%',\r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n  }),   \r\n  clearIndicator : base => ({ \r\n      ...base, \r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n      paddingTop: '0px',\r\n      paddingBottom: '0px',\r\n  }),   \r\n  dropdownIndicator: base => ({ \r\n      ...base, \r\n      paddingTop: '0px',\r\n      paddingBottom: '0px',\r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n  }),\r\n  input: () => ({        \r\n      margin: '0px'\r\n  }),\r\n  menu: base => ({ \r\n    ...base, \r\n    zIndex: 9999,\r\n  })\r\n}\r\n\r\nexport const getBlockStyle = (block) => {\r\n    switch (block.getType()) {\r\n      case 'blockquote': \r\n      console.log('blockquote!');\r\n        return 'RichEditor-blockquote';\r\n      default: return null;\r\n    }\r\n  }\r\n\r\nconst getOptions = () => {\r\n  return BLOCK_TYPES.map(block => {\r\n    return {\r\n    value: block.style,\r\n    label: block.label,\r\n    icon: block.icon\r\n    }\r\n  });\r\n}\r\n\r\nconst formatOptionLabel = ({ value, label, icon}, metadata) => {\r\n  \r\n  return <div style={{ display: \"flex\", alignItems: 'center', height: '100%' }}>\r\n    {icon && <FontAwesomeIcon style={{marginRight: '5px'}} icon={faIcon[icon]}/>}\r\n    <div>{label}</div>\r\n  </div>\r\n};   \r\n\r\nconst BlockStyleControls = (props) => {        \r\n    const {editorState} = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n    \r\n    const findOption = (optVal) => {\r\n      const indexFind = optionsList.findIndex(opt => opt.value === optVal);\r\n      if (indexFind < 0) {\r\n        return null;\r\n      }\r\n      return optionsList[indexFind];\r\n    }\r\n\r\n    const handleChange = (newValue, actionMeta) => {\r\n      if (actionMeta.action === 'select-option') {\r\n          props.onToggle(newValue.value);\r\n      }\r\n    };\r\n\r\n    const optionsList = getOptions();\r\n    let optionVal = blockType ==='unstyled' ? findOption('normal') : findOption(blockType);\r\n    console.log('BlockStyleControls', blockType, optionVal, selection.isCollapsed());      \r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n          <Select \r\n            options={optionsList}\r\n            styles={customStyles}\r\n            formatOptionLabel={formatOptionLabel}        \r\n            value={optionVal}    \r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlockStyleControls;","import '../mainEditor.css';\r\nimport StyleButton from '../components/styleButton';\r\n\r\nvar INLINE_STYLES = [\r\n    {label: 'Bold', style: 'BOLD', icon: 'faBold', title: 'Bold'},\r\n    {label: 'Italic', style: 'ITALIC', icon: 'faItalic', title: 'Italicize'},\r\n    {label: 'Underline', style: 'UNDERLINE' ,icon: 'faUnderline', title: 'Underline'},\r\n    {label: '{ }', style: 'CODE', title: 'Monospace'},\r\n  ];\r\n\r\n  const InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n    \r\n    return (\r\n      <div className=\"RichEditor-controls\">\r\n        {INLINE_STYLES.map((type) =>\r\n          <StyleButton\r\n            key={type.label}\r\n            active={currentStyle.has(type.style)}\r\n            onToggle={props.onToggle}\r\n            {...type}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default InlineStyleControls;","export const colorToRgbString = (colorString, opacity) => {\r\n    // try to convert to hex first\r\n    if (!colorString) {\r\n        return `rgba(0, 0, 0, ${opacity})`;\r\n    }\r\n    let hexVal = colorString;\r\n    let lowerCase = colorString.toLowerCase();\r\n    if (lowerCase in colorHexMap) {\r\n        hexVal = colorHexMap[lowerCase];\r\n    }\r\n    let rgb = hexToRgb(hexVal);\r\n    if (!rgb) {\r\n        return `rgba(0, 0, 0, ${opacity})`;\r\n    }\r\n\r\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`\r\n}\r\n\r\nconst colorHexMap = {\r\n    aliceblue: \"#F0F8FF\",\r\n    antiquewhite: \"#FAEBD7\",\r\n    aqua: \"#00FFFF\",\r\n    aquamarine: \"#7FFFD4\",\r\n    azure: \"#F0FFFF\",\r\n    beige: \"#F5F5DC\",\r\n    bisque: \"#FFE4C4\",\r\n    black: \"#000000\",\r\n    blanchedalmond: \"#FFEBCD\",\r\n    blue: \"#0000FF\",\r\n    blueviolet: \"#8A2BE2\",\r\n    brown: \"#A52A2A\",\r\n    burlywood: \"#DEB887\",\r\n    cadetblue: \"#5F9EA0\",\r\n    chartreuse: \"#7FFF00\",\r\n    chocolate: \"#D2691E\",\r\n    coral: \"#FF7F50\",\r\n    cornflowerblue: \"#6495ED\",\r\n    cornsilk: \"#FFF8DC\",\r\n    crimson: \"#DC143C\",\r\n    cyan: \"#00FFFF\",\r\n    darkblue: \"#00008B\",\r\n    darkcyan: \"#008B8B\",\r\n    darkgoldenrod: \"#B8860B\",\r\n    darkgray: \"#A9A9A9\",\r\n    darkgrey: \"#A9A9A9\",\r\n    darkgreen: \"#006400\",\r\n    darkkhaki: \"#BDB76B\",\r\n    darkmagenta: \"#8B008B\",\r\n    darkolivegreen: \"#556B2F\",\r\n    darkorange: \"#FF8C00\",\r\n    darkorchid: \"#9932CC\",\r\n    darkred: \"#8B0000\",\r\n    darksalmon: \"#E9967A\",\r\n    darkseagreen: \"#8FBC8F\",\r\n    darkslateblue: \"#483D8B\",\r\n    darkslategray: \"#2F4F4F\",\r\n    darkslategrey: \"#2F4F4F\",\r\n    darkturquoise: \"#00CED1\",\r\n    darkviolet: \"#9400D3\",\r\n    deeppink: \"#FF1493\",\r\n    deepskyblue: \"#00BFFF\",\r\n    dimgray: \"#696969\",\r\n    dimgrey: \"#696969\",\r\n    dodgerblue: \"#1E90FF\",\r\n    firebrick: \"#B22222\",\r\n    floralwhite: \"#FFFAF0\",\r\n    forestgreen: \"#228B22\",\r\n    fuchsia: \"#FF00FF\",\r\n    gainsboro: \"#DCDCDC\",\r\n    ghostwhite: \"#F8F8FF\",\r\n    gold: \"#FFD700\",\r\n    goldenrod: \"#DAA520\",\r\n    gray: \"#808080\",\r\n    grey: \"#808080\",\r\n    green: \"#008000\",\r\n    greenyellow: \"#ADFF2F\",\r\n    honeydew: \"#F0FFF0\",\r\n    hotpink: \"#FF69B4\",\r\n    indianred: \"#CD5C5C\",\r\n    indigo: \"#4B0082\",\r\n    ivory: \"#FFFFF0\",\r\n    khaki: \"#F0E68C\",\r\n    lavender: \"#E6E6FA\",\r\n    lavenderblush: \"#FFF0F5\",\r\n    lawngreen: \"#7CFC00\",\r\n    lemonchiffon: \"#FFFACD\",\r\n    lightblue: \"#ADD8E6\",\r\n    lightcoral: \"#F08080\",\r\n    lightcyan: \"#E0FFFF\",\r\n    lightgoldenrodyellow: \"#FAFAD2\",\r\n    lightgray: \"#D3D3D3\",\r\n    lightgrey: \"#D3D3D3\",\r\n    lightgreen: \"#90EE90\",\r\n    lightpink: \"#FFB6C1\",\r\n    lightsalmon: \"#FFA07A\",\r\n    lightseagreen: \"#20B2AA\",\r\n    lightskyblue: \"#87CEFA\",\r\n    lightslategray: \"#778899\",\r\n    lightslategrey: \"#778899\",\r\n    lightsteelblue: \"#B0C4DE\",\r\n    lightyellow: \"#FFFFE0\",\r\n    lime: \"#00FF00\",\r\n    limegreen: \"#32CD32\",\r\n    linen: \"#FAF0E6\",\r\n    magenta: \"#FF00FF\",\r\n    maroon: \"#800000\",\r\n    mediumaquamarine: \"#66CDAA\",\r\n    mediumblue: \"#0000CD\",\r\n    mediumorchid: \"#BA55D3\",\r\n    mediumpurple: \"#9370DB\",\r\n    mediumseagreen: \"#3CB371\",\r\n    mediumslateblue: \"#7B68EE\",\r\n    mediumspringgreen: \"#00FA9A\",\r\n    mediumturquoise: \"#48D1CC\",\r\n    mediumvioletred: \"#C71585\",\r\n    midnightblue: \"#191970\",\r\n    mintcream: \"#F5FFFA\",\r\n    mistyrose: \"#FFE4E1\",\r\n    moccasin: \"#FFE4B5\",\r\n    navajowhite: \"#FFDEAD\",\r\n    navy: \"#000080\",\r\n    oldlace: \"#FDF5E6\",\r\n    olive: \"#808000\",\r\n    olivedrab: \"#6B8E23\",\r\n    orange: \"#FFA500\",\r\n    orangered: \"#FF4500\",\r\n    orchid: \"#DA70D6\",\r\n    palegoldenrod: \"#EEE8AA\",\r\n    palegreen: \"#98FB98\",\r\n    paleturquoise: \"#AFEEEE\",\r\n    palevioletred: \"#DB7093\",\r\n    papayawhip: \"#FFEFD5\",\r\n    peachpuff: \"#FFDAB9\",\r\n    peru: \"#CD853F\",\r\n    pink: \"#FFC0CB\",\r\n    plum: \"#DDA0DD\",\r\n    powderblue: \"#B0E0E6\",\r\n    purple: \"#800080\",\r\n    rebeccapurple: \"#663399\",\r\n    red: \"#FF0000\",\r\n    rosybrown: \"#BC8F8F\",\r\n    royalblue: \"#4169E1\",\r\n    saddlebrown: \"#8B4513\",\r\n    salmon: \"#FA8072\",\r\n    sandybrown: \"#F4A460\",\r\n    seagreen: \"#2E8B57\",\r\n    seashell: \"#FFF5EE\",\r\n    sienna: \"#A0522D\",\r\n    silver: \"#C0C0C0\",\r\n    skyblue: \"#87CEEB\",\r\n    slateblue: \"#6A5ACD\",\r\n    slategray: \"#708090\",\r\n    slategrey: \"#708090\",\r\n    snow: \"#FFFAFA\",\r\n    springgreen: \"#00FF7F\",\r\n    steelblue: \"#4682B4\",\r\n    tan: \"#D2B48C\",\r\n    teal: \"#008080\",\r\n    thistle: \"#D8BFD8\",\r\n    tomato: \"#FF6347\",\r\n    turquoise: \"#40E0D0\",\r\n    violet: \"#EE82EE\",\r\n    wheat: \"#F5DEB3\",\r\n    white: \"#FFFFFF\",\r\n    whitesmoke: \"#F5F5F5\",\r\n    yellow: \"#FFFF00\",\r\n    yellowgreen: \"#9ACD32\",\r\n};\r\n\r\n\r\n\r\n//https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nconst hexToRgb =(hex) => {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n      return r + r + g + g + b + b;\r\n    });\r\n  \r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }","import {colorToRgbString} from './colorHelper';\r\n\r\nconst addHightlight = (divElem, linkElem, line1Elem, line2Elem, color) => {\r\n    linkElem.style.border = `2px solid ${colorToRgbString(color, 0.5)}`;\r\n    line1Elem.style.stroke = colorToRgbString(color, 0.5);\r\n    line2Elem.style.stroke = colorToRgbString(color, 0.5);\r\n    divElem.style.border = `2px solid ${colorToRgbString(color, 0.5)}`;\r\n}\r\n\r\nconst removeHightlight = (divElem, linkElem, line1Elem, line2Elem, color) => {\r\n    linkElem.style.border = `2px solid rgba(50, 50, 50, 0.1)`;\r\n    line1Elem.style.stroke = colorToRgbString(color, 0.15);\r\n    line2Elem.style.stroke = colorToRgbString(color, 0.15);\r\n    divElem.style.border = `0px`;\r\n}\r\n\r\n\r\nexport const handleHoverLink = (linkRef, linkKey, line1Ref, line2Ref, data, isMouseOver) => {\r\n    // linkRef.current.style.backgroundColor = 'blue'\r\n    const {color} = data;\r\n\r\n    // Find the corresponding div with the entitykey and highlight it\r\n    const divElem = document.getElementById(`comment-div-${linkKey}`);\r\n    if (!divElem) {\r\n        return;\r\n    }\r\n\r\n    if (isMouseOver) {\r\n        addHightlight(divElem, linkRef.current, line1Ref.current, line2Ref.current, color);\r\n    }\r\n    else {\r\n        removeHightlight(divElem, linkRef.current, line1Ref.current, line2Ref.current, color);\r\n    }    \r\n}\r\n\r\nexport const handleHoverComment = (divRef, key, color, isMouseOver) => {\r\n    const linkElem = document.getElementById(`comment-span-${key}`);\r\n    const line1Elem = document.getElementById(`svg-line1-${key}`);\r\n    const line2Elem = document.getElementById(`svg-line2-${key}`);\r\n    if (!linkElem || !line1Elem || !line2Elem) {\r\n        return;\r\n    }\r\n\r\n    if (isMouseOver) {\r\n        addHightlight(divRef.current, linkElem, line1Elem, line2Elem, color);\r\n    }\r\n    else {\r\n        removeHightlight(divRef.current, linkElem, line1Elem, line2Elem, color);\r\n    }\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport '../mainEditor.css';\r\nimport StyleButton from '../components/styleButton';\r\nimport {Editor, EditorState, Modifier, RichUtils, convertToRaw, convertFromRaw, CompositeDecorator} from 'draft-js';\r\nimport { Button, Popup } from 'semantic-ui-react';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker, Emoji } from 'emoji-mart';\r\nimport { Popover } from 'react-tiny-popover'\r\nimport {handleHoverLink} from '../helpers/hoverHelper';\r\n\r\nconst styles = {\r\n    link: {\r\n        border: \"2px solid rgba(50, 50, 50, 0.1)\", // grayish outline\r\n        backgroundColor: 'rgba(0, 0, 255, 0.1)',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        transform: \"rotate(-1deg)\",\r\n        lineHeight: '1.7', // to avoid overlapping with possible comment below\r\n        // transition: \"all 0.3s\"\r\n    },\r\n  };\r\n\r\nconst ANNOTATOR_TYPES = [\r\n    {label: 'Comment', style: 'Comment', icon: 'faCommentDots', showIconAndLabel: true, title: 'Highlight text to add Comments', requiresSelection: true},\r\n    {label: 'Yes', style: 'Yes', icon: 'faCheck', showIconAndLabel: true, title: 'Add Check Mark', requiresSelection: false},\r\n    {label: 'No', style: 'No', icon: 'faTimes', showIconAndLabel: true, title: 'Add X Mark', requiresSelection: false},\r\n    {label: 'Emoji', style: 'Emoji', popup: true, icon: 'faGrin', showIconAndLabel: true, title: 'Add Emoji', requiresSelection: false},    \r\n];\r\n\r\nexport function findLinkEntities(contentBlock, callback, contentState) {\r\n    \r\n    contentBlock.findEntityRanges(\r\n      (character) => {\r\n        const entityKey = character.getEntity();\r\n        if (entityKey)\r\n        {\r\n            console.log('findLinkEntities', entityKey, contentState.getEntity(entityKey).getType());\r\n        }\r\n        \r\n        return (\r\n          entityKey !== null &&\r\n          contentState.getEntity(entityKey).getType() === 'COMMENT'\r\n        );\r\n      },\r\n      callback\r\n    );    \r\n  }\r\n\r\n\r\n\r\n  // Set Pointer-Events to none for the SVG to avoid interfering with the mouse cursor and events\r\nexport const Link = (props) => {\r\n  console.log(\"NEW LINKK!!!!\", props);\r\n  //const data = props.contentState.getEntity(props.entityKey).getData();\r\n  const linkRef = useRef(null);\r\n  const line1Ref = useRef(null);\r\n  const line2Ref = useRef(null);\r\n\r\n    return (\r\n        <>\r\n        <span id={'comment-span-'+props.entityKey} \r\n          style={styles.link} \r\n          ref={linkRef} \r\n          onMouseOver={() => handleHoverLink(linkRef, props.entityKey, line1Ref, line2Ref, props.contentState.getEntity(props.entityKey).getData(), true )}\r\n          onMouseOut={() => handleHoverLink(linkRef, props.entityKey, line1Ref, line2Ref, props.contentState.getEntity(props.entityKey).getData(), false )}>\r\n        {props.children}\r\n        </span>\r\n        <svg id={'svg-span-'+props.entityKey} style={{position: \"absolute\", \r\n                                                width: \"calc(100% + 100px)\", \r\n                                                height: \"500px\", \r\n                                                left: \"0\", \r\n                                                cursor: \"default\", \r\n                                                zIndex: \"100\",\r\n                                                marginRight: \"-200px\",\r\n                                                display: \"float\",                                                 \r\n                                                pointerEvents: \"none\"}}>\r\n          <line id={'svg-line1-'+props.entityKey} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"0\" stroke=\"rgba(0, 0, 255, 0.4)\" strokeWidth=\"2\" ref={line1Ref}/>\r\n          <line id={'svg-line2-'+props.entityKey} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"0\" stroke=\"rgba(0, 0, 255, 0.4)\" strokeWidth=\"2\"ref={line2Ref}/>\r\n        </svg>\r\n        </>\r\n    \r\n    );\r\n  };\r\n\r\n\r\nconst AnnotatorControls = (props) => {    \r\n    const {editorState} = props;\r\n    const selection = editorState.getSelection();\r\n    /** Link/Comment Start */\r\n    const decoratorLink = new CompositeDecorator([\r\n        {\r\n          strategy: findLinkEntities,\r\n          component: Link,\r\n        },\r\n    ]);\r\n    //EditorState.set(editorState, {decorator: decoratorLink});\r\n\r\n    const confirmLink = () => {\r\n        console.log('confirmLink start');\r\n        if (editorState.getSelection().isCollapsed()) {\r\n          console.log('confirmLink: no selection is made. Exiting function.');\r\n          return;\r\n        }\r\n        logState();\r\n        // const {editorState, urlValue} = this.state;\r\n        const commentText = '';\r\n        const contentState = editorState.getCurrentContent();\r\n    \r\n        const contentStateWithEntity = contentState.createEntity(\r\n          'COMMENT',\r\n          'MUTABLE',\r\n          {\r\n            comment: commentText,\r\n            color: 'green', // default\r\n            isNew: true, \r\n            parentMouseOver: props.parentMouseOverLink,\r\n            parentMouseOut: props.parentMouseOutLink,\r\n          }\r\n        );\r\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n        \r\n        // Apply entity\r\n        let nextEditorState = EditorState.set(editorState, \r\n          { currentContent: contentStateWithEntity }\r\n        );\r\n    \r\n        // Apply selection\r\n        nextEditorState = RichUtils.toggleLink( nextEditorState, \r\n          nextEditorState.getSelection(), entityKey \r\n        );\r\n        props.onChange(nextEditorState);\r\n        props.parentRerender();\r\n        console.log('confirmLink after onChange');\r\n        // logState();\r\n      }\r\n      /** Link/Comment End */\r\n\r\n    \r\n\r\n    const onClick = (style) => {\r\n        console.log(\"[AnnotatorControls] onClick\", style);\r\n        if (style === 'Yes') {\r\n            insertEmoji('✅')\r\n        }\r\n        else if (style === 'No') {\r\n            insertEmoji('❌')\r\n        }\r\n        else if (style === 'Comment') {\r\n            confirmLink();\r\n        }\r\n        // else if (style === 'Emoji') {\r\n        //   setIsPopoverOpen(!isPopoverOpen);\r\n        // }\r\n    }// onclick - end\r\n\r\n    const insertEmoji = (emoji) => {\r\n        const selection = editorState.getSelection();\r\n        const contentState = editorState.getCurrentContent();\r\n        //const txt = '&#x' + text + ';';\r\n        let nextEditorState = EditorState.createEmpty();\r\n        if (selection.isCollapsed()) {\r\n            const nextContentState = Modifier.insertText(contentState, selection, emoji);\r\n            nextEditorState = EditorState.push(\r\n                editorState,\r\n                nextContentState,\r\n                'insert-characters'\r\n                );\r\n        } \r\n        else {\r\n            const nextContentState = Modifier.replaceText(contentState, selection, emoji);\r\n            nextEditorState = EditorState.push(\r\n                editorState,\r\n                nextContentState,\r\n                'insert-characters'\r\n            );\r\n        } //else\r\n        props.onChange(nextEditorState);\r\n\r\n    }\r\n\r\n    const onEmojiSelect = (emojiObject) => {\r\n      console.log(\"onEmojiSelect\", emojiObject);\r\n      insertEmoji(emojiObject.native);\r\n    };\r\n\r\n    const logState = () => {\r\n        const content = props.editorState.getCurrentContent();\r\n        console.log(convertToRaw(content));\r\n    };\r\n\r\n    const [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n        {ANNOTATOR_TYPES.map((type) => {\r\n            if (type.label === 'Emoji') {\r\n                return <Popover\r\n                key={type.label}\r\n                isOpen={isPopoverOpen}\r\n                positions={['bottom']}\r\n                onClickOutside={() => setIsPopoverOpen(false)}\r\n                containerStyle={{zIndex: 9999}}\r\n                // content={<div>Hi! I'm popover content.</div>}\r\n                content={<Picker\r\n                  onSelect={onEmojiSelect}\r\n                  title={\"Select Emoji\"}\r\n                />}\r\n                // There is a bug in semantic ui react that popup does not show when putting react component. Workaround is to surround with a div\r\n                >\r\n                  <span onClick={() => {\r\n                    console.log('Popover trigger clicked');\r\n                    setIsPopoverOpen(true)}}> \r\n                    <StyleButton \r\n                    {...type}\r\n                    onToggle={onClick}\r\n                    />\r\n                    </span>\r\n              </Popover>\r\n            }\r\n            else {\r\n                return <StyleButton \r\n                key={type.label}\r\n                {...type}                \r\n                onToggle={onClick}\r\n                isDisabled={type.requiresSelection && selection.isCollapsed()}\r\n                />\r\n            }\r\n        } // map function\r\n        ) // map\r\n        }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnotatorControls;","import { useState, useRef, useEffect } from 'react';\r\nimport { Icon, Input } from 'semantic-ui-react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport {colorToRgbString} from '../helpers/colorHelper';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {handleHoverComment} from '../helpers/hoverHelper';\r\n\r\nimport './commentComponent.css';\r\n\r\n/**\r\n * For showing the comment of a particular text on the right side of the editor\r\n * @param {*} props \r\n * @returns \r\n */\r\nconst Comment = (props) => {\r\n    let [isNewHandled, setHandledNew] = useState(!props.isNew);\r\n    let [isEditMode, setEditMode] = useState(!!props.isNew);\r\n    let [colorVal, setColorVal] = useState(props.color);\r\n    let [commentVal, setCommentVal] = useState(props.comment);\r\n\r\n    \r\n    const refCommentTxtArea = useRef(null);\r\n    const refWrapper = useRef(null);\r\n    //const randomTilt = useRef(Math.random()-0.5);\r\n    const randomTilt = useRef(0);\r\n\r\n    let styleCommentContainer = {\r\n        //border: `1px solid ${colorToRgbString(colorVal, 1)}`,\r\n        //borderLeft: `16px solid ${colorToRgbString(colorVal, 1)}`,\r\n        // background: \"-webkit-linear-gradient(315deg, transparent 5px, #c00 5px)\", \r\n        //transform: `rotate(${randomTilt.current}deg)`\r\n    }\r\n\r\n    let styleColorIcon = {\r\n        color: `${colorVal}`\r\n    }\r\n\r\n    let styleTextArea = {\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        \r\n    }\r\n\r\n    let styleCommentBody = {\r\n        backgroundColor: colorToRgbString(colorVal, 0.15),\r\n    }    \r\n    \r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n          console.log('[commentComponent][handleClickOutside]', commentVal.substring(0, 3), 'isEditMode', isEditMode, refWrapper.current && !refWrapper.current.contains(event.target));\r\n          if (refWrapper.current && !refWrapper.current.contains(event.target)) {\r\n              if (!isNewHandled) {\r\n                refCommentTxtArea.current.focus();\r\n                setHandledNew(true);                \r\n                console.log('[commentComponent][handleClickOutside] processing for new components done');\r\n              }\r\n              else if (isEditMode){\r\n                setEditMode(false);\r\n                props.parentRerender();\r\n                console.log('[commentComponent][handleClickOutside] processing for non-new components done');\r\n              }\r\n          }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n      }, [refWrapper, isEditMode, isNewHandled]);\r\n\r\n    const onFocusHandler = () => {\r\n        console.log('[commentComponent] Focused comment', commentVal);\r\n        // set to Edit mode\r\n        setEditMode(true);\r\n        props.parentRerender();\r\n    }\r\n\r\n    const onCommentChanged = (evt) => {\r\n        setCommentVal(evt.target.value);\r\n        props.parentRerender();\r\n        let newData = {\r\n            comment: evt.target.value,\r\n            color: colorVal\r\n        }\r\n        props.parentUpdateComment(props.entityKey, newData);\r\n    }\r\n\r\n    const onColorChanged = (evt) => {\r\n        setColorVal(evt.target.value);\r\n        props.parentRerender();\r\n        let newData = {\r\n            comment: commentVal,\r\n            color: evt.target.value\r\n        }\r\n        props.parentUpdateComment(props.entityKey, newData);\r\n    }\r\n\r\n    const handleDeleteComment = () => {\r\n        props.parentDeleteComment(props.entityKey, props.blockKey);\r\n    }\r\n\r\n    const getCommentHeaderElement = (isEditMode) => {\r\n        if (!isEditMode) {\r\n            return null;\r\n        }\r\n    \r\n        return <div className=\"CommentHeader\">\r\n                <div className=\"CommentHeaderCaption\">Edit Comment</div>\r\n                <div className=\"CommentHeaderColor\">\r\n                    <div className=\"ColorField\" title=\"Input CSS Color (e.g. #f00, red)\">\r\n                        <input className=\"CommentHeaderColorInput\" placeholder=\"Color\" onChange={onColorChanged} defaultValue={colorVal}></input>\r\n                        <Icon style={styleColorIcon} name=\"square\"/>\r\n                    </div>\r\n                    <div className=\"deleteCommentBtn\" onClick={handleDeleteComment} title=\"Delete Comment\">\r\n                        <FontAwesomeIcon icon={faTimesCircle}/>\r\n                    </div>\r\n                </div>                                    \r\n            </div>;\r\n    }\r\n   \r\n    console.log('[commentComponent render]', commentVal.substring(0, 3), 'isEditMode', isEditMode);\r\n    return <div id={'comment-div-' + props.entityKey} \r\n        className=\"CommentContainer\" \r\n        style={styleCommentContainer}\r\n        onFocus={onFocusHandler} \r\n        onMouseOver={() => handleHoverComment(refWrapper, props.entityKey, colorVal, true)}\r\n        onMouseOut={() => handleHoverComment(refWrapper, props.entityKey, colorVal, false)}\r\n        ref={refWrapper}\r\n        >\r\n        {getCommentHeaderElement(isEditMode)}\r\n        <div className=\"CommentBody\" style={styleCommentBody}>\r\n            <TextareaAutosize \r\n                className=\"CommentTextArea\" \r\n                value={commentVal} \r\n                onChange={onCommentChanged}\r\n                ref={refCommentTxtArea}\r\n                placeholder=\"Comments...\"\r\n                spellCheck={false}\r\n                style={styleTextArea} \r\n                autoFocus={isEditMode}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Comment;","import React, {useContext, useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Editor, EditorState, RichUtils, convertToRaw, convertFromRaw, getDefaultKeyBinding, CompositeDecorator, SelectionState} from 'draft-js';\r\nimport { store } from './store.js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './mainEditor.css';\r\nimport StyleButton from './components/styleButton';\r\nimport BlockStyleControls, {getBlockStyle} from './richTextComponents/blockComponents';\r\nimport InlineStyleControls from './richTextComponents/inlineComponents';\r\nimport AnnotatorControls, {findLinkEntities, Link} from './richTextComponents/annotatorComponents';\r\nimport Comment from './components/commentComponent';\r\nimport {colorToRgbString} from './helpers/colorHelper';\r\nimport {useWindowSize} from './helpers/windowHelper';\r\n\r\nconst MainEditor = () => {\r\n  const {state, dispatch} = useContext(store); // Warning: everytime there is a change in the store, will force a re-render\r\n  const [width, height] = useWindowSize();\r\n  console.log('MainEditor render', state);\r\n  const decoratorLink = new CompositeDecorator([\r\n    {\r\n      strategy: findLinkEntities,\r\n      component: Link,\r\n    },\r\n]);\r\n\r\n  const getInitialState = () => {    \r\n    if (state.editorContent === null) {\r\n      console.log('[MainEditor] getInitialState, createEmpty');\r\n      return EditorState.createEmpty(decoratorLink);\r\n      //return EditorState.createEmpty();\r\n    }\r\n    //return EditorState.createWithContent(convertFromRaw(state.docs[state.docs.length-1].docContent));\r\n    console.log('[MainEditor] getInitialState', convertToRaw(state.editorContent));\r\n    return EditorState.createWithContent(state.editorContent, decoratorLink);\r\n    //return EditorState.createWithContent(state.editorContent);\r\n  }\r\n\r\n  // Fix for loading other documents when documents Dropdown is changed\r\n  // TODO: may not be needed if we use proper reducer\r\n  useEffect(() => {\r\n    console.log(\"useEffect for file name changes:\", state.docCurreFileName);\r\n    setEditorState(getInitialState());\r\n    // TODO: remove this for now as this causes unnecessary rerender...anyways, we will refactor the file loading/saving machanism\r\n    // Can use useRef to skip initial render\r\n    // https://medium.com/swlh/prevent-useeffects-callback-firing-during-initial-render-the-armchair-critic-f71bc0e03536\r\n    // TODO2: Need to wipe out all entities when document is changed...or use a different way of travering the entities (via convertToRaw)\r\n  }, [state.docCurreFileName]);\r\n\r\n  // If comment changes, need to redraw the lines to make sure they are still pointing to the correct coordinates\r\n  const [commentRerender, setCommentReRender] = useState(0);\r\n\r\n  const updateComment = (key, data) => {\r\n    const contentState = editorState.getCurrentContent();\r\n    contentState.replaceEntityData(key, data)\r\n    EditorState.set(editorState, { currentContent: contentState });\r\n    setCommentReRender(value => value + 1); // use the parameter passed instead of directly referencing commentRerender state value as it might be stale due to closure\r\n    onChange(editorState);\r\n  }\r\n\r\n  const deleteComment = (entityKey, blockKey) => {\r\n    const contentState = editorState.getCurrentContent();\r\n    let blockObj = contentState.getBlockForKey(blockKey);\r\n    blockObj.findEntityRanges(\r\n      (character) => {\r\n        const currEntityKey = character.getEntity();\r\n        if (!currEntityKey || currEntityKey !== entityKey) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      },\r\n      (start, end) => {\r\n        console.log('found entity yo remove', start, end);\r\n        var selectionState = SelectionState.createEmpty(blockKey);\r\n        var updatedSelection = selectionState.merge({\r\n          focusOffset: end,\r\n          anchorOffset:start,\r\n        });\r\n        let updatedState = RichUtils.toggleLink(editorState, updatedSelection, null);\r\n        console.log(\"new state after delete\", convertToRaw(updatedState.getCurrentContent()));\r\n        onChange(updatedState);\r\n      }\r\n    );\r\n  }\r\n\r\n  const getCommentsAndEntities = () => {\r\n    let currContent = editorState.getCurrentContent();\r\n    let blocks = currContent.getBlockMap();\r\n    let entities = currContent.getAllEntities();\r\n    let ret = [];\r\n  \r\n    // traverse each block\r\n    blocks.forEach((block) => {\r\n      const blockKey = block.key;\r\n      block.findEntityRanges(\r\n        (character) => {\r\n          const entityKey = character.getEntity();\r\n          if (!entityKey) {\r\n            return;\r\n          }\r\n          const entityObj = currContent.getEntity(entityKey);\r\n          if (entityKey !== null && currContent.getEntity(entityKey).getType() === 'COMMENT') {\r\n            //console.log('[getComments by block]', entityObj);\r\n            let newObj = {\r\n              key: entityKey,\r\n              entity: entityObj,\r\n              blockKey: blockKey,\r\n              div: <Comment \r\n              key={entityKey} \r\n              entityKey={entityKey} \r\n              entity={entityObj}\r\n              blockKey={blockKey}\r\n              parentRerender={() => setCommentReRender(value => value + 1) }\r\n              parentUpdateComment={updateComment}\r\n              parentDeleteComment={deleteComment}\r\n              {...entityObj.data}\r\n              />\r\n            }\r\n            ret.push(newObj);\r\n          }          \r\n        },\r\n        null\r\n      );    \r\n    });\r\n  \r\n    return ret;\r\n  }\r\n\r\n  const [editorState, setEditorState] = useState(() => getInitialState()); // pass in a function to avoid re-running the function unnecessarily\r\n  console.log('MainEditor', convertToRaw(editorState.getCurrentContent()));\r\n\r\n  const commentsAndEntities = getCommentsAndEntities(editorState);\r\n\r\n  const drawConnectorLines = () => {\r\n    let entities = commentsAndEntities;  \r\n    let editorElem = document.getElementById('RichEditor-editor');\r\n    let editorChildElem = editorElem.firstChild;\r\n\r\n    let editorRect = editorElem.getBoundingClientRect();    \r\n    let editorChildRect = editorChildElem.getBoundingClientRect();    \r\n    entities.forEach(entObj => {    \r\n      const {key, entity} = entObj;\r\n      let spanElem = document.getElementById(`comment-span-${key}`);\r\n      let spanParentElem = document.getElementById(`comment-span-${key}`).parentElement; // for computation related to SVG because SVG and comment-span are siblings\r\n      let line1Elem = document.getElementById(`svg-line1-${key}`);\r\n      let line2Elem = document.getElementById(`svg-line2-${key}`);\r\n      let divElem = document.getElementById(`comment-div-${key}`);\r\n      let svgElem = document.getElementById(`svg-span-${key}`);\r\n      let color = entity.data.color;\r\n      \r\n      if (!spanElem) {\r\n        console.log('[drawConnectorLines] span iter', key, entity.data.comment, 'not found');\r\n        return;\r\n      }\r\n      if (!divElem) {\r\n        console.log('[drawConnectorLines] div iter', key, entity.data.comment, 'not found');\r\n        return;\r\n      }\r\n\r\n      //console.log(\"===========drawConnectorLines for comments Start...===========\", entity.data.comment);\r\n     \r\n      let divRect = divElem.getBoundingClientRect();\r\n      let spanRect = spanElem.getBoundingClientRect();          \r\n      let spanParentRect = spanParentElem.getBoundingClientRect();     \r\n      let svgRect = svgElem.getBoundingClientRect();    \r\n\r\n      //console.log('svg orig top', svgRect.top);\r\n      svgElem.style.top = `${editorRect.top - spanParentRect.top}px`;\r\n      //console.log('svg supposed top', editorRect.top - spanRect.top, svgElem.style.top);\r\n      //svgElem.style.left = '0px'\r\n      svgElem.style.height = editorRect.height - 20; // -20 to account for paddings and new line, and prevent unnecessary scrollbar when the content is just few\r\n\r\n      // Debug borders\r\n      // spanElem.style.border = '1px solid red';\r\n      // editorElem.style.border = '1px solid blue';\r\n      // svgElem.style.border = '1px solid magenta';\r\n\r\n      // Draw a line from:\r\n      // [a] span bottom-right to editor right\r\n      // [b] editor right to div top\r\n      let editorRight = editorElem.getBoundingClientRect().right;\r\n      // console.log('editorRect', editorRect.top);\r\n      // console.log('editorChildRect', editorChildRect.top);\r\n      // console.log('spanRect', spanRect.top);\r\n      // console.log('svgRect', svgRect.top);\r\n\r\n       // for those with indents (e.g. bulletted), the svg element's left side is also indented\r\n       // -1 because editorChildRect and svgRect in normal scenario differs by 1\r\n      const svgOffset = svgRect.left - editorChildRect.left-2;\r\n\r\n      const paddingLeft = 15;\r\n      const paddingRightLeft = 20 + paddingLeft;\r\n      // Use 0.5 to smooth out the lines -- SVG thingy\r\n      const offsetEditorAndSpan = spanRect.top - editorRect.top;\r\n      line1Elem.setAttribute(\"x1\", spanRect.right-paddingLeft-svgOffset);\r\n      line1Elem.setAttribute(\"x2\", editorRight-paddingRightLeft-svgOffset);\r\n      line1Elem.setAttribute(\"y1\", 2.5 + offsetEditorAndSpan);\r\n      line1Elem.setAttribute(\"y2\", 2.5 + offsetEditorAndSpan);\r\n\r\n      const divHeightHalf = divRect.height / 2;\r\n      line2Elem.setAttribute(\"x1\", editorRight-paddingRightLeft-svgOffset);\r\n      line2Elem.setAttribute(\"x2\", editorRight-paddingRightLeft + 24 - svgOffset);\r\n      line2Elem.setAttribute(\"y1\", 2.5 + offsetEditorAndSpan);\r\n      line2Elem.setAttribute(\"y2\", divRect.top - editorRect.top + divHeightHalf);      \r\n\r\n      // Set the colors\r\n      line1Elem.setAttribute(\"stroke\", colorToRgbString(color, 0.15));\r\n      line2Elem.setAttribute(\"stroke\", colorToRgbString(color, 0.15));\r\n      spanElem.style.backgroundColor = colorToRgbString(color, 0.15);      \r\n    });\r\n  }\r\n\r\n  const willCauseOverlflow = (adjustmentFromPrevBot, divHeight, editorHeight, remainingDivHeight) => {\r\n    return adjustmentFromPrevBot + divHeight + remainingDivHeight > editorHeight;\r\n  }\r\n\r\n  // Main goal is try to align the span and the div so that it will be easier to see.\r\n  // If main goal cannot be achieved due to space constraints:\r\n  // try to move some comments up to lessen the scrolling\r\n  const adjustDivPositions = () => {\r\n    let entities = commentsAndEntities;  \r\n    let editorElem = document.getElementById('RichEditor-editor');\r\n    let editorRect = editorElem.getBoundingClientRect();    \r\n    const marginBottomComment = 10; // margin-bottom value for each comment \r\n\r\n    const sumDivHeights = entities.reduce( (prev, currEnt) => {\r\n      const {key, entity} = currEnt;\r\n      let divElem = document.getElementById(`comment-div-${key}`);\r\n      let divRect = divElem.getBoundingClientRect();\r\n      return prev + divRect.height + marginBottomComment;\r\n    }, 0);\r\n\r\n    console.log('[adjustDivPositions] start, total height divs', sumDivHeights, 'VS Editor Height', editorRect.height);\r\n\r\n    let prevBottom = editorRect.top;\r\n    let sumDivsPrev = 0;\r\n    for (let i = 0; i < entities.length; i++) {\r\n      let entObj = entities[i];\r\n      const {key, entity} = entObj;\r\n      let spanElem = document.getElementById(`comment-span-${key}`);\r\n      let divElem = document.getElementById(`comment-div-${key}`);\r\n      if (!spanElem) {\r\n        console.log('[adjustDivPositions] span iter', key, entity.data.comment, 'not found');\r\n        continue;\r\n      }\r\n      if (!divElem) {\r\n        console.log('[adjustDivPositions] div iter', key, entity.data.comment, 'not found');\r\n        continue;\r\n      }\r\n\r\n      let divRect = divElem.getBoundingClientRect();\r\n      let spanRect = spanElem.getBoundingClientRect();\r\n\r\n      let diffSpanDiv = spanRect.top - divRect.top;\r\n      //let currentTop = divRect.top;\r\n      let supposedTop = spanRect.top;\r\n      //let adjustment =  currentTop - supposedTop;\r\n      //let adjustmentFromPrevBot = currentTop - prevBottom - adjustment;\r\n      let adjustmentFromPrevBot = supposedTop - prevBottom; // margin needed to make exactly align the span and div...but this may be too much so there are more handling below\r\n      if (adjustmentFromPrevBot > 0) {\r\n        let remainingDivHeight = sumDivHeights - sumDivsPrev - divRect.height - marginBottomComment;\r\n        //let willOverflow = willCauseOverlflow(adjustmentFromPrevBot, divRect.height, editorRect.height, sumDivHeights-sumDivsPrev);\r\n        //let willOverflow = prevBottom + adjustmentFromPrevBot + divRect.height + marginBottomComment + remainingDivHeight + 30 > editorRect.height;\r\n        let spaceRequired = editorRect.bottom - prevBottom - divRect.height - marginBottomComment - remainingDivHeight - 10 - 20; // -10 for extra space below, -20 for edit mode\r\n        let willOverflow = spaceRequired < adjustmentFromPrevBot;\r\n        if (willOverflow) {          \r\n          console.log('[adjustDivPositions] willOverflow adding ', adjustmentFromPrevBot, entity.data.comment.substring(0, 3) + '...space required', spaceRequired);\r\n          console.log('editorRect.bottom', editorRect.bottom);\r\n          console.log('divRect.bottom', divRect.bottom);\r\n          console.log('prevBottom', prevBottom);\r\n          console.log('remainingDivHeight', remainingDivHeight);\r\n          if (spaceRequired > 0) {\r\n            divElem.style.marginTop = spaceRequired + 'px';\r\n          } \r\n          else {\r\n            console.log('[adjustDivPositions] Space required is not enough...dont adjust');\r\n          }\r\n        }\r\n        else {\r\n          console.log('[adjustDivPositions] Adjusted element', entity.data.comment.substring(0, 3), 'by', adjustmentFromPrevBot, 'height', divRect.height);\r\n          divElem.style.marginTop = adjustmentFromPrevBot + 'px';\r\n        }\r\n      }\r\n      else {\r\n        // means there will be overlap with previous element; do nothing\r\n        console.log('[adjustDivPositions] We cannot adjust this because will overlap with previous elements');\r\n      }\r\n      \r\n      sumDivsPrev += divRect.height + marginBottomComment;\r\n      prevBottom = divElem.getBoundingClientRect().bottom;\r\n    }\r\n  }\r\n\r\n  // For drawing line or repositioning comment blocks    \r\n  useEffect(() => {        \r\n    console.log(\"===========UseEffect for All comments Start...===========\");\r\n    adjustDivPositions();\r\n    drawConnectorLines();\r\n\r\n    console.log(\"===========UseEffect for comments End...===========\");\r\n  }, [commentRerender, editorState, width, height]); // Note: editorState added to fix issue where user edited some text....but it has side effect about additional re-render\r\n   \r\n  const onChange = (editState) => {       \r\n    setEditorState(editState);\r\n    dispatch({type: 'editorStateChanged', data: editState.getCurrentContent()}); // dispatch so that it's ready to be saved    \r\n  }\r\n\r\n  const editor = React.useRef(null);\r\n  const focusEditor =  () => {\r\n    editor.current.focus();\r\n  }\r\n\r\n  const toggleBlockType = (blockType) => {\r\n    onChange(\r\n      RichUtils.toggleBlockType(\r\n        editorState,\r\n        blockType\r\n      )\r\n    );\r\n  }\r\n\r\n  const toggleInlineStyle = (inlineStyle) => {\r\n    onChange(\r\n      RichUtils.toggleInlineStyle(\r\n        editorState,\r\n        inlineStyle\r\n      )\r\n    );\r\n  }\r\n\r\n  const handleKeyCommand = (command) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const onTab = (e) => {\r\n    const maxDepth = 4;\r\n    setEditorState(RichUtils.onTab(e, editorState, maxDepth));\r\n  }\r\n\r\n  const styleMap = {\r\n    CODE: {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n      fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n      fontSize: 16,\r\n      padding: 2,\r\n    },\r\n  };\r\n\r\n  // const handleMouseOverLink = (linkRef) => {\r\n  //   linkRef.current.style.backgroundColor = 'green'\r\n  // }\r\n\r\n  // const handleMouseOutLink = () => {\r\n    \r\n  // }\r\n\r\n  // If the user changes block type before entering any text, we can\r\n  // either style the placeholder or hide it. Let's just hide it now.\r\n  let className = 'RichEditor-editor';\r\n  var contentState = editorState.getCurrentContent();\r\n  if (!contentState.hasText()) {\r\n    if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n      className += ' RichEditor-hidePlaceholder';\r\n    }\r\n  }\r\n\r\n\r\n  return <div className=\"RichEditor-root\">\r\n    <div className=\"draftToolBar\">\r\n      <div className=\"blockInlineContainer\">\r\n        <AnnotatorControls \r\n          editorState={editorState}\r\n          onChange={setEditorState}\r\n          parentRerender={() => setCommentReRender(!commentRerender)}\r\n          // parentMouseOverLink={handleMouseOverLink }\r\n          // parentMouseOutLink={handleMouseOutLink }\r\n        />\r\n      </div>\r\n      <div className=\"blockInlineContainer\">\r\n        <InlineStyleControls\r\n          editorState={editorState}\r\n          onToggle={toggleInlineStyle}\r\n        />\r\n        <BlockStyleControls\r\n          editorState={editorState}\r\n          onToggle={toggleBlockType}\r\n        />\r\n      </div>\r\n    </div>\r\n    <div className=\"EditorAndCommentContainer\">\r\n      <div className={className} onClick={focusEditor} id={className}>\r\n        <Editor\r\n          blockStyleFn={getBlockStyle}\r\n          customStyleMap={styleMap}\r\n          editorState={editorState}\r\n          handleKeyCommand={handleKeyCommand}\r\n          onChange={onChange}\r\n          onTab={onTab}\r\n          placeholder=\"Write Something...\"\r\n          ref={editor}\r\n          spellCheck={true}\r\n        />\r\n      </div>\r\n      <div className=\"CommentAreaContainer\">{commentsAndEntities.map(ent => ent.div)}</div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default MainEditor;","import React, { useLayoutEffect, useState } from 'react';\r\n\r\nexport const useWindowSize = () => {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n  }","import React, { useContext, useReducer, useState, useRef } from 'react';\r\nimport { store } from '../store.js';\r\nimport './fileManager3.css';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faFileAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// let options = [\r\n//     { value: 'chocolate', label: 'Chocolate'},\r\n//     { value: 'strawberry', label: 'Strawberry' },\r\n//     { value: 'vanilla', label: 'Vanilla' }\r\n//   ]\r\n\r\nconst customStyles = {  \r\n    option: (provided, state) => ({\r\n    ...provided,\r\n    color: state.isSelected ? 'darkgray' : 'gray',\r\n    }),\r\n    container: base => ({ \r\n        ...base, \r\n        fontSize: '14px',\r\n        fontFamily: 'Arvo-Bold'\r\n    }),\r\n    control: base => ({ \r\n        ...base, \r\n        minHeight: '30px',\r\n    }),\r\n    valueContainer: base => ({ \r\n        ...base, \r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        height: '100%'\r\n    }),\r\n    singleValue: base => ({ \r\n        ...base, \r\n        marginTop: '0px',\r\n        marginBottom: '0px',\r\n    }),\r\n    indicatorsContainer: base => ({ \r\n        ...base, \r\n    }),\r\n    indicatorSeparator: base => ({ \r\n        ...base, \r\n        height: '100%',\r\n        marginTop: '0px',\r\n        marginBottom: '0px',\r\n    }),   \r\n    clearIndicator : base => ({ \r\n        ...base, \r\n        marginTop: '0px',\r\n        marginBottom: '0px',\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n    }),   \r\n    dropdownIndicator: base => ({ \r\n        ...base, \r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n        marginTop: '0px',\r\n        marginBottom: '0px',\r\n    }),\r\n    input: () => ({        \r\n        margin: '0px'\r\n    }),\r\n}\r\n  \r\nconst FileManager3  = (props) => {\r\n    console.log('[FileManager3] render');\r\n    const {state, dispatch} = useContext(store);\r\n\tconst [deletedItem, setDeletedItem] = useState(false);\r\n    \r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const selRef = useRef(null);\r\n\r\n    const getOptions = (docs) => {\r\n        console.log('getDocumentListOptions', docs);\r\n        return docs.map((doc, index) => ({value: doc.name, label: doc.name}));\r\n    }\r\n    const options = getOptions(state.docs);\r\n    const [optionsVal, setOptions] = useState(options);\r\n\r\n    const getDefaultVal = () => options && options.length > 0 ? options[options.length - 1] : null;\r\n    const [selVal, setSelVal] = useState(getDefaultVal());\r\n\r\n    const onSaveClicked = () => {\r\n        console.log(\"onSaveClicked\");\r\n        dispatch({type: 'save', data: {}});\r\n    }\r\n\r\n    const handleChange = (newValue, actionMeta) => {\r\n        console.group('Value Changed');\r\n        console.log(newValue);\r\n        console.log(`action: ${actionMeta.action}`);\r\n        console.groupEnd();\r\n        if (deletedItem) {\r\n            setDeletedItem(false);\r\n            console.log('handleChange detected deletedItem...returning early');\r\n            return;\r\n        }\r\n        if (actionMeta.action === 'create-option') {\r\n            //setOptions([...options, newValue]);\r\n            optionsVal.push(newValue);\r\n            setOptions(optionsVal);\r\n            setSelVal(newValue);\r\n            dispatch({type: 'save', data: {newFileName: newValue.value}});\r\n        }\r\n        else if (actionMeta.action === 'select-option') {\r\n            setSelVal(newValue);\r\n            setShowMenu(false);\r\n            selRef.current.blur();\r\n            dispatch({type: 'selectedDocChanged', data: newValue.value});\r\n        }\r\n        else if (actionMeta.action === 'clear') {\r\n            setSelVal(null);\r\n        }\r\n      };\r\n    const handleInputChange = (inputValue, actionMeta) => {\r\n        // console.group('Input Changed');\r\n        // console.log(inputValue);\r\n        // console.log(`action: ${actionMeta.action}`);\r\n        // if (actionMeta.action === 'create-option') {\r\n        //     //setOptions([...options, inputValue]);\r\n        //     options.push(inputValue);\r\n        // }\r\n        //console.groupEnd();\r\n      };\r\n\r\n    const handleDelete = (e, optVal) => {\r\n        console.log(\"Trying to delete \", optVal);\r\n        let findIndex = optionsVal.findIndex(opt => opt.value === optVal);\r\n        if (findIndex < 0) {\r\n            return;\r\n        }\r\n\r\n        if (selVal && selVal.value === optVal) {\r\n            console.log(\"set value to null as deleting selected item\");\r\n            setSelVal(null);\r\n        }\r\n        optionsVal.splice(findIndex, 1);\r\n        setOptions(optionsVal);\r\n\t\tsetDeletedItem(true);\r\n        dispatch({type: 'delete', data: optVal});\r\n        //e.preventDefault(); // might not be needed anymore....setDeletedItem updates deletedItem just in time for handleChange() using onMouseDown instead of onClick\r\n        console.log(\"Done removing\", optVal);\r\n    }\r\n\r\n    const formatOptionLabel = ({ value, label, }, metadata) => {\r\n        const isCreateMenuItem = metadata.inputValue && metadata.inputValue.length > 0 && value !== label;\r\n        \r\n        return <div style={{ display: \"flex\" }}>\r\n          {!isCreateMenuItem && <FontAwesomeIcon icon={faFileAlt} style={{marginRight:\"8px\", marginTop: \"2px\"}}/>}\r\n          <div>{label}</div>\r\n          {metadata.context === 'menu' && !isCreateMenuItem &&\r\n          <div style={{ \r\n              marginLeft: \"auto\", // right-align\r\n              color: \"white\", \r\n              backgroundColor: \"rgba(255,0,0,0.8)\",\r\n              fontSize: \"11px\",\r\n              borderRadius: \"3px\",\r\n              padding: \"3px\",\r\n              cursor: \"pointer\",              \r\n              fontFamily: 'Segoe UI'\r\n               }}\r\n               onMouseDown={ (e) => handleDelete(e, value)}>\r\n            Delete\r\n          </div>}\r\n          {metadata.context === 'menu' && isCreateMenuItem &&\r\n          <div style={{ \r\n              marginLeft: \"auto\", // right-align\r\n              color: \"white\", \r\n              backgroundColor: \"rgba(50,150,50,0.8)\",\r\n              fontSize: \"11px\",\r\n              borderRadius: \"3px\",\r\n              padding: \"3px\",      \r\n              fontFamily: 'Segoe UI'    \r\n               }}>\r\n            New\r\n          </div>}\r\n        </div>\r\n    };   \r\n          \r\n    console.log(\"File Current Value:\", selVal);\r\n    let classBtnSave = \"SaveButton\";\r\n    if (!selVal) {\r\n        classBtnSave += \" btnDisabled\"\r\n    }\r\n\r\n    return <div className=\"FileManagerContainer\">\r\n        <CreatableSelect \r\n        placeholder=\"Select an item or type in a new file...\"\r\n        isClearable\r\n        className=\"selectDropdown\" \r\n        options={optionsVal} \r\n        styles={customStyles}\r\n        onChange={handleChange}\r\n        onInputChange={handleInputChange}\r\n        formatOptionLabel={formatOptionLabel}\r\n        closeMenuOnSelect={false}\r\n        value={selVal}\r\n        menuIsOpen={showMenu}\r\n        onBlur={() => {\r\n            setShowMenu(false);\r\n        }}\r\n        blurInputOnSelect={false}\r\n        onFocus={() => {\r\n            setShowMenu(true);\r\n        }}\r\n        ref={selRef}\r\n        defaultValue={selVal}\r\n    />\r\n    <div className={classBtnSave} onClick={selVal && onSaveClicked} title=\"Save to Local Storage\">\r\n        <FontAwesomeIcon icon={faSave}/>\r\n    </div>\r\n    </div>\r\n        \r\n}\r\n\r\nexport default FileManager3;\r\n","import './App.css';\r\nimport MainEditor from './mainEditor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { StateProvider } from './store.js';\r\nimport FileManager from './components/fileManager';\r\nimport FileManager3 from './components/fileManager3';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n  const [isActiveHamburger, setHamburger] = useState(false);\r\n  let hamClassNames = \"hamburger\";\r\n  let hamBarClassNames = \"bar-hamburger\";\r\n  let settingsAreaClassNames = \"SettingsArea\"\r\n  if (isActiveHamburger) {\r\n    hamClassNames += \" hamburger-active\";\r\n    hamBarClassNames += \" bar-hamburger-active\";\r\n    settingsAreaClassNames += \" SettingsArea-active\";\r\n  }\r\n\r\n  return (\r\n    <StateProvider>\r\n      <div className=\"App\">          \r\n        <div className=\"AppHeader\">\r\n          <div className=\"AppTitleArea\">\r\n            <FontAwesomeIcon icon={faCommentDots}/>\r\n            <span className=\"AppTitleText\">Noob Annotator</span>\r\n          </div>\r\n\r\n          <div className=\"DocTitleArea\"></div>\r\n            \r\n          <div className={settingsAreaClassNames}>\r\n            {/* <FileManager/> */}\r\n            <FileManager3/>\r\n          </div>\r\n          <div className={hamClassNames} onClick={ () => setHamburger(!isActiveHamburger)}>\r\n            <span className={hamBarClassNames}></span>\r\n            <span className={hamBarClassNames}></span>\r\n            <span className={hamBarClassNames}></span>\r\n          </div>\r\n        </div>\r\n        <MainEditor/>\r\n      </div>\r\n    </StateProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}